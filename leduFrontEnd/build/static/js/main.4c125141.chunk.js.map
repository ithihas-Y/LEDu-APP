{"version":3,"sources":["components/Navbar/Navbar.jsx","functions.js","pages/Home/Home.js","pages/Bridge/Bridge.js","App.js","index.js"],"names":["Navbar","useState","wallet","setWalllet","injected","InjectedConnector","supportedChainIds","useWeb3React","activate","account","connector","a","web3","Web3","window","ethereum","send","x","eth","accounts","hashMessage","console","log","alert","className","to","onClick","connect","provider","providers","HttpProvider","process","smartCHef","Contract","abi","bridge","Babi","ledu","bep20","amt","tx","methods","deposit","utils","toWei","toString","encodeABI","transactionParameters","from","selectedAddress","data","request","method","params","message","withdraw","approve","userInfo","call","info","amount","rewardDebt","getBalance","balanceOf","balance","allowance","Home","input","chainId","networkName","SetNN","bal","SetBal","setInfo","useEffect","then","getStakedInfo","y","id","display","type","min","step","max","onChange","e","target","value","stake","toPrecision","Bridge","setBal","placeholder","depositBridge","App","path","element","ReactDOM","render","getLibrary","document","getElementById"],"mappings":"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","file":"static/js/main.4c125141.chunk.js","sourcesContent":["import { useWeb3React } from \"@web3-react/core\";\r\nimport React, { useState } from \"react\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport \"./Navbar.css\";\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [wallet, setWalllet] = useState();\r\n  const injected = new InjectedConnector({\r\n    supportedChainIds: [1, 3, 4, 5, 56, 137],\r\n  });\r\n\r\n  const { account, activate, connector } = useWeb3React();\r\n\r\n  async function connect() {\r\n    const web3 = new Web3(window.ethereum);\r\n    const addr = await window.ethereum.send(\"eth_requestAccounts\");\r\n    const x = web3.eth.accounts.hashMessage(\"hello\");\r\n    console.log(x);\r\n    try {\r\n      await activate(injected);\r\n      if (window.ethereum) {\r\n        setWalllet(true);\r\n        window.alert(\"Connected\");\r\n      } else {\r\n        window.alert(\"No Web3 Wallet Found, Use web3 based Browser\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"nav-bg\">\r\n      <Link to=\"/\" className=\"logo\">\r\n        LEDU\r\n      </Link>\r\n      <div className=\"nav-links\">\r\n        <Link className=\"nav-link\" to=\"/bridge\">\r\n          Bridge\r\n        </Link>\r\n        <button\r\n          className={wallet ? \"connected-wallet\" : \"connect-wallet-btn\"}\r\n          onClick={() => {\r\n            connect();\r\n          }}\r\n        >\r\n          {wallet ? \"Wallet Connected\" : \"Connect Wallet\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import abi from './abis/SmartChefInitializable.json'\nimport bep20 from './abis/IBEP20.json'\nimport Web3 from 'web3'\nimport Babi from './abis/bridgeETH.json'\n\n\nconst provider = new Web3.providers.HttpProvider(process.env.REACT_APP_RPC)\n\nexport const web3 = new Web3(provider)\n\n\nconst smartCHef = new web3.eth.Contract(\n  abi.abi,\n  '0xbc046d9cDD95E171E5cD62e57f6cB0f293bb8206'\n)\n\nconst bridge = new web3.eth.Contract(Babi,'0x3B5b63500845863a0B738f20a08c48B2EdaFb5A6')\n\nconst ledu = new web3.eth.Contract(bep20.abi,'0x73e7040B225bF6bB72F511e954e845CF4c218685')\n\nconst ethereum = window.ethereum\n\nexport async function depositBridge(amt) {\n  try {\n    if (typeof ethereum !== \"undefined\" && ethereum !== \"\") {\n      const tx = bridge.methods.deposit(web3.utils.toWei(amt.toString())).encodeABI()\n      const transactionParameters = {\n        to: '0x3B5b63500845863a0B738f20a08c48B2EdaFb5A6',\n        from: ethereum.selectedAddress,\n        data: tx,\n      }\n      await ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [transactionParameters],\n      })\n    } else {\n      console.log(\"Please install MetaMask!\")\n    }\n  } catch (e) {\n    console.log(e.message)\n  }\n}\n\n\nexport async function stake(amt) {\n    try {\n        if (typeof ethereum !== \"undefined\" && ethereum !== \"\") {\n          const tx = smartCHef.methods.deposit(web3.utils.toWei(amt.toString())).encodeABI()\n          const transactionParameters = {\n            to: '0xbc046d9cDD95E171E5cD62e57f6cB0f293bb8206',\n            from: ethereum.selectedAddress,\n            data: tx,\n          }\n          await ethereum.request({\n            method: \"eth_sendTransaction\",\n            params: [transactionParameters],\n          })\n        } else {\n          console.log(\"Please install MetaMask!\")\n        }\n      } catch (e) {\n        console.log(e.message)\n      }\n}\nexport async function withdraw(amt) {\n  try {\n      if (typeof ethereum !== \"undefined\" && ethereum !== \"\") {\n        const tx = smartCHef.methods.withdraw(web3.utils.toWei(amt.toString())).encodeABI()\n        const transactionParameters = {\n          to: '0xbc046d9cDD95E171E5cD62e57f6cB0f293bb8206',\n          from: ethereum.selectedAddress,\n          data: tx,\n        }\n        await ethereum.request({\n          method: \"eth_sendTransaction\",\n          params: [transactionParameters],\n        })\n      } else {\n        console.log(\"Please install MetaMask!\")\n      }\n    } catch (e) {\n      console.log(e.message)\n    }\n}\n\nexport async function approve(){\n  try {\n    if (typeof ethereum !== \"undefined\" && ethereum !== \"\") {\n      const tx = ledu.methods.approve('0xbc046d9cDD95E171E5cD62e57f6cB0f293bb8206','1000000000000000000000000000').encodeABI()\n      const transactionParameters = {\n        to: '0x73e7040B225bF6bB72F511e954e845CF4c218685',\n        from: ethereum.selectedAddress,\n        data: tx,\n      }\n      await ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [transactionParameters],\n      })\n    } else {\n      console.log(\"Please install MetaMask!\")\n    }\n  } catch (e) {\n    console.log(e.message)\n  }\n}\n\nexport async function getStakedInfo(){\n  if(typeof ethereum !==\"undefined\" && ethereum !==\"\"){\n    if(ethereum.selectedAddress != null){\n      const info = await smartCHef.methods.userInfo(ethereum.selectedAddress).call()\n      return [info.amount/(10**18),info.rewardDebt/(10**18)]\n    }\n  }\n}\n\nexport async function getBalance(){\n  \n  if (typeof ethereum !== \"undefined\" && ethereum !== \"\"){\n    if (ethereum.selectedAddress != null) {\n      const balance = await ledu.methods.balanceOf(ethereum.selectedAddress).call()\n      const allowance = await ledu.methods.allowance(ethereum.selectedAddress,'0xbc046d9cDD95E171E5cD62e57f6cB0f293bb8206').call()\n      return [(balance/10**18),allowance]\n    }\n  }else{\n    return \"Wallet not Connected\"\n  }\n  \n}","import { useWeb3React } from \"@web3-react/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  getBalance,\r\n  stake,\r\n  withdraw,\r\n  approve,\r\n  getStakedInfo,\r\n} from \"../../functions\";\r\n\r\nfunction Home() {\r\n  const { account, chainId } = useWeb3React();\r\n\r\n  let input;\r\n\r\n  const [networkName, SetNN] = useState(null);\r\n  const [bal, SetBal] = useState(null);\r\n  //const [input,setInput] = useState(null)\r\n  const [info, setInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    SetNN(chainId);\r\n    getBalance().then((x) => {\r\n      SetBal(x);\r\n    });\r\n    getStakedInfo().then((y) => {\r\n      setInfo(y);\r\n    });\r\n  }, [chainId, account]);\r\n\r\n  /*\r\n  useEffect(()=>{\r\n    if(input !=null){\r\n      setInput(web3.utils.toWei(input.toString()))\r\n    }\r\n  },[input])\r\n  */\r\n\r\n  function display() {\r\n    if (networkName) {\r\n      if (networkName === 1) {\r\n        return \"ETHEREUM\";\r\n      }\r\n      if (networkName === 2) {\r\n        return \"KOVAN\";\r\n      }\r\n      if (networkName === 3) {\r\n        return \"ROPSTEN\";\r\n      }\r\n      if (networkName === 4) {\r\n        return \"RINKEBY\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function approveRender() {\r\n    if (bal && bal[1] == 0) {\r\n      return (\r\n        <>\r\n          <button className=\"btn\" onClick={() => approve()}>\r\n            Approve\r\n          </button>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <button className=\"btn\" onClick={() => stake(input)}>\r\n            Stake\r\n          </button>\r\n          <button className=\"btn\" onClick={() => withdraw(input)}>\r\n            Withdraw\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"home-page\">\r\n        <div className=\"content-holder\">\r\n          <div className=\"text-box\">\r\n            <div className=\"heads\">\r\n              <h1 className=\"main-head\">\r\n                Your LEDU Balance is ::\r\n                <h6>{bal && bal[0]}</h6>\r\n              </h1>\r\n            </div>\r\n            <h4 className=\"text-tag\">\r\n              CONNECTED TO<span> {display()}</span> NETWORK\r\n            </h4>\r\n            <h5 className=\"your-address\">YOUR ADDRESS is {account}</h5>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"1\"\r\n              max={bal && bal[0]}\r\n              className=\"input-field\"\r\n              onChange={(e) => {\r\n                input = e.target.value;\r\n              }}\r\n            />\r\n            <h6 className=\"show-address\">SHOW CONTRACT ADDESS</h6>\r\n            <div className=\"buttons\">{approveRender()}</div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-container\">\r\n              <div className=\"staked-balance\">\r\n                <h2 className=\"text-desc\">Your staked balance</h2>\r\n                <h2 className=\"value-desc\">\r\n                  {info && info[0].toPrecision(10)} LEDU\r\n                </h2>\r\n              </div>\r\n              <div className=\"rewards-unstake\">\r\n                <h2 className=\"text-desc\">Rewards if un-staked today</h2>\r\n                <h2 className=\"value-desc\">\r\n                  {info && info[1].toPrecision(10)} LEDU\r\n                </h2>\r\n              </div>\r\n              <div className=\"rewards-maturity\">\r\n                <h2 className=\"text-desc\">Rewards at maturity</h2>\r\n                <h2 className=\"value-desc\">0 LEDU</h2>\r\n              </div>\r\n              <div className=\"early-withdraws\">\r\n                <h2 className=\"text-desc\">Early withdraw starts</h2>\r\n                <h2 className=\"value-time\">07/09/2021, 01:30:00</h2>\r\n              </div>\r\n              <div className=\"maturity\">\r\n                <h2 className=\"text-desc\">Maturity</h2>\r\n                <h2 className=\"value-time\">07/10/2021, 01:30:00</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Bridge.css\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport {depositBridge,getBalance} from '../../functions'\r\n\r\nconst Bridge = () => {\r\n\r\n  const {chainId} = useWeb3React()\r\n  const [bal,setBal] = useState(null)\r\n  let input\r\n\r\n  useEffect(()=>{\r\n    getBalance().then(x=>{\r\n      setBal(x)\r\n    })\r\n  },[chainId])\r\n  return (\r\n    <div className=\"bridge-whole\">\r\n      <div className=\"bridge-boxes-container\">\r\n        <div className=\"card-holder\">\r\n          <h1 className=\"card-head\">Eth</h1>\r\n          <div className=\"bridge-card\">\r\n            <h3>{bal && bal[0]}</h3>\r\n            <input className=\"input-field\" type=\"text\" placeholder=\"0.00\" onChange={e=>{input = e.target.value}} />\r\n            <div className=\"button-holder\">\r\n              <button className=\"btn-1\" onClick={()=>depositBridge(input)}>Deposit</button>\r\n              <button className=\"btn-2\">Withdraw</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-holder\">\r\n          <h1 className=\"card-head\">Binance</h1>\r\n          <div className=\"bridge-card\">\r\n            <h3>$0.00 USD</h3>\r\n            <input className=\"input-field\" type=\"text\" placeholder=\"0.00\" />\r\n            <div className=\"button-holder\">\r\n              <button className=\"btn-1\">Deposit</button>\r\n              <button className=\"btn-2\">Withdraw</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bridge;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport Bridge from \"./pages/Bridge/Bridge\";\n\n// import { useWeb3React } from \"@web3-react/core\";\n// import { useEffect, useState } from \"react\";\n// import {\n//   getBalance,\n//   stake,\n//   withdraw,\n//   approve,\n//   getStakedInfo,\n// } from \"./functions\";\n\nfunction App() {\n  // const {account,chainId} = useWeb3React()\n\n  // let input\n\n  // const [networkName,SetNN] = useState(null)\n  // const [bal,SetBal] = useState(null)\n  // //const [input,setInput] = useState(null)\n  // const [info,setInfo] = useState(null)\n\n  // useEffect(()=>{\n  //   SetNN(chainId)\n  //   getBalance().then(x=>{\n  //     SetBal(x)\n  //   })\n  //   getStakedInfo().then(y=>{\n  //     setInfo(y)\n  //   })\n  // },[chainId,account])\n\n  // /*\n  // useEffect(()=>{\n  //   if(input !=null){\n  //     setInput(web3.utils.toWei(input.toString()))\n  //   }\n  // },[input])\n  // */\n\n  // function display() {\n  //   if(networkName){\n  //     if(networkName===1){\n  //       return 'ETHEREUM'\n  //     }\n  //     if(networkName===2){\n  //       return 'KOVAN'\n  //     }\n  //     if(networkName ===3){\n  //       return 'ROPSTEN'\n  //     }\n  //     if(networkName ===4){\n  //       return 'RINKEBY'\n  //     }\n  //   }\n  // }\n\n  // function approveRender() {\n  //   if (bal && bal[1] == 0) {\n  //     return (\n  //       <>\n  //         <button className=\"btn\" onClick={() => approve()}>\n  //           Approve\n  //         </button>\n  //       </>\n  //     );\n  //   } else {\n  //     return (\n  //       <>\n  //         <button className=\"btn\" onClick={() => stake(input)}>\n  //           Stake\n  //         </button>\n  //         <button className=\"btn\" onClick={() => withdraw(input)}>\n  //           Withdraw\n  //         </button>\n  //       </>\n  //     );\n  //   }\n  // }\n\n  return (\n    <>\n      {/* <div id=\"home-page\">\n        <div className=\"content-holder\">\n          <div className=\"text-box\">\n            <div className=\"heads\">\n              <h1 className=\"main-head\">Your LEDU Balance is :: \n                <h6>{bal && bal[0]}</h6>\n              </h1>\n            </div>\n            <h4 className=\"text-tag\">\n              CONNECTED TO<span> {display()}</span> NETWORK\n            </h4>\n            <h5 className=\"your-address\">YOUR ADDRESS is {account}</h5>\n            <input type=\"number\" min=\"0\" step=\"1\" max={bal && bal[0]} className=\"input-field\" onChange={(e)=>{input = e.target.value}} />\n            <h6 className=\"show-address\">SHOW CONTRACT ADDESS</h6>\n            <div className=\"buttons\">\n              {approveRender()}\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"card-container\">\n              <div className=\"staked-balance\">\n                <h2 className=\"text-desc\">Your staked balance</h2>\n                <h2 className=\"value-desc\">{info && info[0].toPrecision(10)} LEDU</h2>\n              </div>\n              <div className=\"rewards-unstake\">\n                <h2 className=\"text-desc\">Rewards if un-staked today</h2>\n                <h2 className=\"value-desc\">{info && info[1].toPrecision(10)} LEDU</h2>\n              </div>\n              <div className=\"rewards-maturity\">\n                <h2 className=\"text-desc\">Rewards at maturity</h2>\n                <h2 className=\"value-desc\">0 LEDU</h2>\n              </div>\n              <div className=\"early-withdraws\">\n                <h2 className=\"text-desc\">Early withdraw starts</h2>\n                <h2 className=\"value-time\">07/09/2021, 01:30:00</h2>\n              </div>\n              <div className=\"maturity\">\n                <h2 className=\"text-desc\">Maturity</h2>\n                <h2 className=\"value-time\">07/10/2021, 01:30:00</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/bridge\" element={<Bridge />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Web3 from 'web3'\n\nfunction getLibrary(provider){\n  return new Web3(provider)\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App/>\n  </Web3ReactProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}